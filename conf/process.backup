params {
    // CustomQC template
    rmd_template =  "$baseDir/bin/RNASeqNF_QC.Rmd"

    //DGE analysis
    dge_template = "$baseDir/bin/DGE_template.Rmd"
    count_file = null

    //General RNASeq report
    report_template = "$baseDir/assets/RNASeq_report_template.md"
    report_values_file = "$baseDir/assets/rnaseq_template_values.txt"

    //Low readcount cutoff
    minReadcount = 10

    // Standard references
    rRNA_database_manifest = "$baseDir/assets/sortmerna-db-default.txt"

    // Custom settings of tools.
    options.FastQC = ''
    options.TrimGalore = '--fastqc'
    options.SortMeRNA = ''
    options.STAR = '--outReadsUnmapped Fastx --outSAMattributes XS'
    options.FeatureCounts = ''
    options.Salmon_quant = '--seqBias --useVBOpt --gcBias'
    options.Salmon_index = ''
    options.Salmon_quantmerge = ''
    options.GATK4_SplitIntervals = '-SCATTER_COUNT 100 --UNIQUE true -M BALANCING_WITHOUT_INTERVAL_SUBDIVISION_WITH_OVERFLOW'
    options.GATK4_HaplotypeCaller = '--standard-min-confidence-threshold-for-calling 20.0 --dont-use-soft-clipped-bases'
    options.GATK4_VariantFiltration = '--cluster-window-size 35 --cluster-size 3'
    options.GATK4_BQRS = ''
    options.Sambamba_MergeBams = ''
    options.Preseq = "-v -B -D"
    options.MultiQC = ''

    //default parameter initialization
    // Pre-alignment processing.
    runTrimGalore = true
    runSortMeRNA = true

    // Alignment - STAR - Sambamba 
    runMapping = true

    // Counting - SubRead / FeatureCounts
    runFeatureCounts = true

    // Salmon
    runSalmon = false

    // QC
    runFastQC = false
    runMultiQC = true
    runPostQC = true
    runRSeQC_TIN = false

    // GATK (v4)
    runGermlineCallingGATK = false
    runGATK4_BQSR = false

    runDGE = false
    runReport = true

    //featureCounts
    fc_group_features = 'gene_id'
    fc_count_type = 'exon'
    fc_group_features_type = 'gene_biotype'
    fc_extra_attributes = 'gene_name'
    normalize_counts = true
    biotypeQC = true

    // Salmon additional options
    saveUnaligned = false

    //Memory settings for SGE profile
    sambambamarkdup.mem = '32G'
    splitintervals.mem = '12G'
    baserecalibrator.mem = '9G'
    gatherbaserecalibrator.mem = '6G'
    applybqsr.mem = '9G'
    haplotypecaller.mem = '25G'
    mergevcf.mem = '14G'
    variantfiltration.mem = '10G'
    mergebams.mem = '5G'
    multiqc.mem = '4G'
    
    email = null
}

process {
    errorStrategy = 'retry'
    maxRetries = 1
    withLabel :  STAR_2_7_10b_AlignReads  {
          time = '6h'
          penv = 'threaded'
          cpus = 4
          memory = '40G'
          publishDir.path = "${params.out_dir}/STAR"
          publishDir.mode = 'copy'
          publishDir.saveAs = {filename -> if (filename.indexOf("_Log.out") > 0) "logs/$filename" 
                              else if  (filename.indexOf("_Log.final.out") > 0) "logs/$filename" 
                              else if  (filename.indexOf(".bam") > 0) "mapped/$filename" 
                              else if  (filename.indexOf("_SJ.out.tab") > 0) "SJ/$filename" 
                              else if  (filename.indexOf(".mate1") > 0) "unmapped/$filename" 
                              else if  (filename.indexOf(".mate2") > 0) "unmapped/$filename" }	 
     
    } 
    withLabel : Sambamba_0_8_2_Index {
          time = '2h'
          penv = 'threaded'
          cpus = 2
          memory = '4G'
          publishDir.path = "${params.out_dir}/STAR"
          publishDir.mode = 'copy'
          publishDir.saveAs = {filename -> if (filename.indexOf(".bai") > 0) "mapped/$filename" }
    }
    withLabel : MergeFastqLanes {
          time = '35m'
          penv = 'threaded'
          cpus = 1
          memory = '10G'
    }
    withLabel : Sambamba_0_8_2_Flagstat {
          time = '2h'
          penv = 'threaded'
          cpus = 2
          memory = '4G'
          publishDir.path = "${params.out_dir}/Sambamba/Flagstats"
          publishDir.mode = 'copy'
       
    }
    withLabel: RSeQC_5_0_1 {
          time = '4h'
          penv = 'threaded'
          cpus = 2
          memory = '24G'
          publishDir.path = "${params.out_dir}/QC/RSeQC"
          publishDir.mode = 'copy'
          publishDir.saveAs = {filename ->
                         if (filename.indexOf("bam_stat.txt") > 0) "bam_stat/$filename"
                         else if (filename.indexOf("infer_experiment.txt") > 0) "infer_experiment/$filename"
                              else if (filename.indexOf("read_distribution.txt") > 0) "read_distribution/$filename"
                              else if (filename.indexOf("read_duplication.DupRate_plot.pdf") > 0) "read_duplication/$filename"
                              else if (filename.indexOf("read_duplication.DupRate_plot.r") > 0) "read_duplication/rscripts/$filename"
                              else if (filename.indexOf("read_duplication.pos.DupRate.xls") > 0) "read_duplication/dup_pos/$filename"
                              else if (filename.indexOf("read_duplication.seq.DupRate.xls") > 0) "read_duplication/dup_seq/$filename"
                              else if (filename.indexOf("RPKM_saturation.eRPKM.xls") > 0) "RPKM_saturation/rpkm/$filename"
                              else if (filename.indexOf("RPKM_saturation.rawCount.xls") > 0) "RPKM_saturation/counts/$filename"
                              else if (filename.indexOf("RPKM_saturation.saturation.pdf") > 0) "RPKM_saturation/$filename"
                              else if (filename.indexOf("RPKM_saturation.saturation.r") > 0) "RPKM_saturation/rscripts/$filename"
                              else if (filename.indexOf("inner_distance.txt") > 0) "inner_distance/$filename"
                              else if (filename.indexOf("inner_distance_freq.txt") > 0) "inner_distance/data/$filename"
                              else if (filename.indexOf("inner_distance_plot.r") > 0) "inner_distance/rscripts/$filename"
                              else if (filename.indexOf("inner_distance_plot.pdf") > 0) "inner_distance/plots/$filename"
                              else if (filename.indexOf("junction_plot.r") > 0) "junction_annotation/rscripts/$filename"
                              else if (filename.indexOf("junction.xls") > 0) "junction_annotation/data/$filename"
                              else if (filename.indexOf(".junction_annotation_log.txt") > 0) "junction_annotation/log/$filename"
                              else if (filename.indexOf("splice_events.pdf") > 0) "junction_annotation/events/$filename"
                              else if (filename.indexOf("splice_junction.pdf") > 0) "junction_annotation/junctions/$filename"
                              else if (filename.indexOf("junctionSaturation_plot.pdf") > 0) "junction_saturation/$filename"
                              else if (filename.indexOf("junctionSaturation_plot.r") > 0) "junction_saturation/rscripts/$filename"
                              else filename }
     }
   withLabel: RSeQC_5_0_1_TIN {
          time = '16h'
          penv = 'threaded'
          cpus = 2
          memory = '16G'
          publishDir.path = "${params.out_dir}/QC/RSeQC/TIN"
          publishDir.mode = 'copy'     
    }
    withLabel: Preseq_3_2_0 {
          time = '4h'
          penv = 'threaded'
          cpus = 2
          memory = '8G'
          publishDir.path = "${params.out_dir}/QC/Preseq"
          publishDir.mode = 'copy'
          publishDir.saveAs = {filename -> if (filename.indexOf(".ccurve.txt") > 0) "complexity_curve/$filename" }
    }
    withLabel : Sambamba_0_8_2_Markdup {
          time = '4h'
          penv = 'threaded'
          cpus = 6
          memory = '24G'
          //publishDir.path = "${params.out_dir}/Sambamba/Markdup"
          //publishDir.mode = 'copy'
    }
    withLabel : GATK_4_3_0_0_SplitNCigarReads {
          time = '8h'
          penv = 'threaded'
          cpus = 2
          memory = '16G'
          //publishDir.path = "${params.out_dir}/GATK/bam"
    } 
    withLabel : Salmon_1_9_0_Quant {
          time = '24h'
          penv = 'threaded'
          cpus = 2
          memory = '25G'
          publishDir.path = "${params.out_dir}/Salmon"
          publishDir.mode = 'copy'
    }
    withLabel : Salmon_1_9_0_QuantMerge {
          time = '4h'
          penv = 'threaded'
          cpus = 2
          memory = '5G'
          publishDir.path = "${params.out_dir}/Salmon/merged"
          publishDir.mode = 'copy'
    }
    withLabel : Salmon_1_9_0_Index {
          time = '24h'
          penv = 'threaded'
          cpus = 2
          memory = '25G'
          publishDir.path = "${params.out_dir}/reference_resources/Salmon"
          publishDir.mode = 'copy'
    }
    withLabel: GATK_4_3_0_0_SplitIntervals {
          memory = '8G'
          time = '1h'
     }
    withLabel : GATK_4_3_0_0_BaseRecalibration {
          memory = '9G'
          time = '12h'
    }
    withLabel : GATK_4_3_0_0_GatherBaseRecalibrationTables {
          memory = '6G'
          time = '2h'
    }
    withLabel : GATK_4_3_0_0_BaseRecalibrationTable {
          memory = '9G'
          time = '2h'
    }
    withLabel : GATK_4_3_0_0_HaplotypeCaller {
          memory = '25G'
          time = '12h'
    }   
    withLabel : GATK_4_3_0_0_MergeVCFs {
          memory = '14G'
          time = '4h'
          publishDir.path = "${params.out_dir}/GATK/vcf/raw"
          publishDir.mode = 'copy'
    }
    withLabel : GATK_4_3_0_0_VariantFiltration {
          memory = '10G'
          time = '4h'
          publishDir.path = "${params.out_dir}/GATK/vcf/filtered"
          publishDir.mode = 'copy'
    }
    withLabel : Sambamba_0_8_2_Merge {
          cpus = 10
          penv = 'threaded'
          memory = '5G'
          time = '2h'
          //publishDir.path = "${params.out_dir}/GATK/bam"
    }
    withLabel : MultiQC_1_14 {
          memory = '4G'
          time = '1h'
          publishDir.path = "${params.out_dir}/report/MultiQC"
          publishDir.mode = 'copy'
    }
   withLabel : rnaseqnfqc_1_0_0 {
          memory = '4G'
          time = '1h'
          publishDir.path = "${params.out_dir}/report/Custom_QC"
          publishDir.mode = 'copy'
    }
    withLabel : biconductor_3_40_0_edger_normalize {
          memory = '4G'
          time = '1h'
          publishDir.path = "${params.out_dir}/featureCounts"
          publishDir.mode = 'copy'
    }
    withLabel : biconductor_1_38_0_deseq2normalize {
          memory = '4G'
          time = '1h'
          publishDir.path = "${params.out_dir}/featureCounts"
          publishDir.mode = 'copy'
       
    }
    withLabel : Subread_2_0_3_FeatureCounts {
          time = '8h'
          penv = 'threaded'
          cpus = 10
          memory = '16G'
          publishDir.path = "${params.out_dir}/featureCounts"
          publishDir.mode = 'copy'
          publishDir.saveAs = {filename -> if (filename.indexOf("_biotype_") > 0) "biotypes/$filename" 
			       else filename }

     }
     withLabel : STAR_2_7_10b_GenomeGenerate {
          time = '24h'
          penv = 'threaded'
          cpus = 12
          memory = '150G'
          publishDir.path = "${params.out_dir}/reference_resources/STAR"
          publishDir.mode = 'copy'
     }
     withLabel : ucsc_377_GenePredToBed {
          time = '1h'
          penv = 'threaded'
          cpus = 2
          memory = '4G'
          publishDir.path = "${params.out_dir}/reference_resources"
          publishDir.mode = 'copy'
     }
     withLabel : ucsc_377_GtfToGenePred {
          time = '1h'
          penv = 'threaded'
          cpus = 2
          memory = '4G'
     }
     withLabel : CreateIntervalList {
          time = '1h'
          memory = '4G'
          publishDir.path = "${params.out_dir}/reference_resources"
          publishDir.mode = 'copy'
     }
     withLabel : FASTQC_0_11_9 {
          time = '1h'
          memory = '2G'
          publishDir.path = "${params.out_dir}/QC/FastQC/raw"
          publishDir.mode = 'copy'
     }
     withLabel : SortMeRNA_4_3_6 {
          time = '16h'
          penv = 'threaded'
          cpus = 4
          memory = '24G'
          publishDir.path = "${params.out_dir}/QC/"
          publishDir.mode = 'copy'
          publishDir.saveAs = {filename ->
                         if (filename.indexOf("_rRNA_report.txt") > 0) "SorteMeRNA/logs/$filename"
			 else if (filename.indexOf("_filtered_rRNA.fastq.gz") > 0) "SorteMeRNA/rRNA-reads/$filename"
                         else null }
          
     }
     withLabel : TrimGalore_0_6_7 {
          time = '14h'
          penv = 'threaded'
          cpus = 2
          memory = '6G'
          publishDir.path = "${params.out_dir}/QC/TrimGalore"
          publishDir.mode = 'copy'
          publishDir.saveAs = {filename ->
                         if (filename.indexOf("_fastqc") > 0) "FastQC/$filename"
                         else if (filename.indexOf("trimming_report.txt") > 0) "logs/$filename"
                         else null }
     }
    withLabel : Pandocker_21_02_MarkdownToPdf  {
        time = '10m'
        memory = '2G'
        publishDir.path = "${params.out_dir}"
        publishDir.mode = 'copy'
        publishDir.overwrite = 'true'
    }
    withLabel : FillMdTemplate_1_0  {
        time = '10m'
        memory = '1G'
        publishDir.path = "${params.out_dir}"
        publishDir.mode = 'copy'
        publishDir.overwrite = 'true'
    }
}